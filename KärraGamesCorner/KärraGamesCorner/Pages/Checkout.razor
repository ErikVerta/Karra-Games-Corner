@page "/checkout"
@using System.Security.Permissions
@using KärraGamesCorner.Interfaces
@using System.Collections.Concurrent
@using System.Security.Claims

@inject IUnitOfWork _unitOfWork
@inject IHttpContextAccessor _accessor


<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">

<body>
	<div class="checkout-container">
		<div class="checkout">
			<p><i class="bi bi-check-circle"></i>Shipping</p>
			<p><i class="bi bi-check-circle"></i>Checkout</p>
			<p><i class="bi bi-check-circle"></i>Confirmation</p>
			<div class="payment">
				<div class="content">
					<div class="infos">
						<div class="method">
							<h2>Välj en betalningsmetod</h2>
							<img src='https://s3-us-west-2.amazonaws.com/s.cdpn.io/1978060/visa.png' alt='' class="visa">
							<img src='https://s3-us-west-2.amazonaws.com/s.cdpn.io/1978060/mastercard.png' alt='' class="mastercard">
							<img src='https://s3-us-west-2.amazonaws.com/s.cdpn.io/1978060/paypal.png' alt='' class="paypal">
						</div> <!-- .method -->
						<div class="cardHolderName">
							<p class="title">Namn</p>
							<input type="text">
                        </div> <!-- cardHolderName -->
                        @foreach (var cartProduct in _cartProduct)
                        {
                            if (cartProduct.Product.IsPhysical)
                            {
                                <div class="cardUserAddress">
                                    <p class="title">Adress</p>
                                    <input type="text">
                                </div> <!-- cardUserAddress-->
								break;
                            }
                        }
                        <div class="cardNumber">
							<p class="title">Kortnummer</p><br>
							<input type="text" class="number">
							<input type="text" class="number">
							<input type="text" class="number">
							<input type="text" class="number">
						</div> <!-- .cardNumber -->
						<div class="expiration">
							<p class="title">Utgångsdatum</p>
							<select>
								<option>Mån</option>
								<option>01</option>
								<option>02</option>
								<option>03</option>
								<option>04</option>
								<option>05</option>
								<option>06</option>
								<option>07</option>
								<option>08</option>
								<option>09</option>
								<option>10</option>
								<option>11</option>
								<option>12</option>
							</select>
							<select>
								<option>År</option>
								<option>2022</option>
								<option>2023</option>
								<option>2024</option>
								<option>2025</option>
							</select>
						</div> <!-- .expiration -->
						<div class="security">
							<p class="title">CVC</p>
							<input type="text">
						</div><!-- .security -->
						<button class="btn-success" id="confirm-btn">Slutför betalning</button>
					</div> <!-- .infos -->
				</div> <!-- .content -->
			</div> <!-- .payment -->
		</div> <!-- .checkout -->
	</div> <!-- .checkout-container  -->
</body>


@code {
    private ConcurrentBag<CartProduct> _cartProduct;

    protected override async Task OnInitializedAsync()
    {
        if (_accessor.HttpContext.User.Identity.IsAuthenticated)
        {
            var claims = _accessor.HttpContext.User.Claims;
            foreach (var claim in claims)
            {
                if (claim.Type == ClaimTypes.NameIdentifier)
                {
                    _cartProduct = new ConcurrentBag<CartProduct>(await _unitOfWork.CartProducts.GetAsync(filter: (c => c.ApplicationUserId == claim.Value), include:"Product,User"));
					return;
                }
            }
        }
    }

}
