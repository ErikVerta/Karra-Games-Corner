@page "/customercart"

@using KärraGamesCorner.Interfaces
@using System.Collections.Concurrent
@using System.Security.Claims
@using KärraGamesCorner.Data.Models

@inject IUnitOfWork _unitOfWork
@inject IHttpContextAccessor _accessor
@inject NavigationManager NavigationManager


<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>KundVagn - KärraGamesCorner</title>

    
        <link rel="stylesheet" href="/Identity/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="/Identity/css/site.css" />
        
</head>

<body>


<table>
     
	<tr>
		<th>Titel</th>
		<th>Pris</th>
		<th>Antal</th>
		<th>TotalPris</th>
		<th>Action</th>
	</tr>
	@foreach (var cartProduct in _cartProducts)
	{
		<tr>
			<td>@cartProduct.Product.Name</td>
			<td>@cartProduct.Product.Price</td>
			<td>@cartProduct.Amount</td>
			<td>@(@cartProduct.Amount * @cartProduct.Product.Price)</td>
			<td>
				<button class="btn btn-danger">Delete</button>
			</td>
		</tr>
	}

</table>

<div>
	<button class="btn btn-success" @onclick="GoToCheckout" disabled=@IsDisabled> Till checkout</button>
</div>

<footer class="footer border-top pl-3 text-muted">
        <div class="container">
        &copy; 2022 - KärraGamesCorner
        </div>
    </footer>

</body>



@code {
    //När den är true så kan man inte klicka på knappen
	private bool IsDisabled { get; set; } = true;


    private ConcurrentBag<CartProduct> _cartProducts = new();

    protected override async Task OnInitializedAsync()
    {
        if (_accessor.HttpContext.User.Identity.IsAuthenticated)
        {
            var claims = _accessor.HttpContext.User.Claims;
            foreach (var claim in claims)
            {
                if (claim.Type == ClaimTypes.NameIdentifier)
                {
                    var user = (await _unitOfWork.Users.GetAsync(filter: (x => x.Id == claim.Value), include: "CartProducts")).FirstOrDefault();

                    if (user is null)
                    {
                        return;
                    }

                    _cartProducts = new ConcurrentBag<CartProduct>(user.CartProducts);
	                if (_cartProducts.Count > 0)
	                { // Man kan klicka på knappen endast om det finns något i carten
		                IsDisabled = false;
	                }
                    return;
                }
            }
        }
    }

    
	private void GoToCheckout()
	{
		NavigationManager.NavigateTo("/Checkout");
	}


}
